"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateEmployeeController = exports.updateEmployeeUseCase = exports.createEmployeeController = exports.createEmployeeUseCase = exports.getAllEmployeesController = exports.getAllEmployeesUseCase = exports.getManyEmployeesUseCase = exports.getEmployeeByEmailController = exports.getEmployeeByEmailUseCase = exports.checkIfEmployeeExistsUseCase = void 0;
const checkEmployeeUseCase_1 = require("./application/checkEmployeeUseCase");
const createEmployeeUseCase_1 = require("./application/createEmployeeUseCase");
const getAllEmployeesUseCase_1 = require("./application/getAllEmployeesUseCase");
const getEmployeeByEmailUseCase_1 = require("./application/getEmployeeByEmailUseCase");
const getManyEmployeesUseCase_1 = require("./application/getManyEmployeesUseCase");
const updateEmployeeUseCase_1 = require("./application/updateEmployeeUseCase");
const CreateEmployeeController_1 = require("./infrastructure/controllers/CreateEmployeeController");
const GetEmployeeByEmailController_1 = require("./infrastructure/controllers/GetEmployeeByEmailController");
const GetEmployeesController_1 = require("./infrastructure/controllers/GetEmployeesController");
const UpdateEmployeeController_1 = require("./infrastructure/controllers/UpdateEmployeeController");
const EmployeeRepository_1 = require("./infrastructure/repositories/EmployeeRepository");
const employeeRepository = new EmployeeRepository_1.EmployeeRepository();
exports.checkIfEmployeeExistsUseCase = new checkEmployeeUseCase_1.CheckEmployeeUseCase(employeeRepository);
exports.getEmployeeByEmailUseCase = new getEmployeeByEmailUseCase_1.GetEmployeeByEmailUseCase(employeeRepository);
exports.getEmployeeByEmailController = new GetEmployeeByEmailController_1.GetEmployeeByEmailController(exports.getEmployeeByEmailUseCase);
exports.getManyEmployeesUseCase = new getManyEmployeesUseCase_1.GetManyEmployeesUseCase(employeeRepository);
exports.getAllEmployeesUseCase = new getAllEmployeesUseCase_1.GetAllEmployeesUseCase(employeeRepository);
exports.getAllEmployeesController = new GetEmployeesController_1.GetEmployeesController(exports.getAllEmployeesUseCase, exports.getManyEmployeesUseCase);
exports.createEmployeeUseCase = new createEmployeeUseCase_1.CreateEmployeeUseCase(employeeRepository);
exports.createEmployeeController = new CreateEmployeeController_1.CreateEmployeeController(exports.createEmployeeUseCase, exports.getEmployeeByEmailUseCase, exports.checkIfEmployeeExistsUseCase);
exports.updateEmployeeUseCase = new updateEmployeeUseCase_1.UpdateEmployeeUseCase(employeeRepository);
exports.updateEmployeeController = new UpdateEmployeeController_1.UpdateEmployeeController(exports.updateEmployeeUseCase, exports.getEmployeeByEmailUseCase, exports.checkIfEmployeeExistsUseCase);
